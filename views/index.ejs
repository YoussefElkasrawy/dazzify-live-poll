<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/styles.css">
</head>
<body>
    <div class="container">
        <h1><%= title %></h1>
        <div class="questions-container">
            <% questions.forEach((question, index) => { %>
                <div class="question-card" id="question-<%= question.key %>">
                    <h2><%= question.text %></h2>
                    <div class="options-grid">
                        <% question.options.forEach((option, optIndex) => { %>
                            <button class="option-btn" 
                                    data-question-key="<%= question.key %>" 
                                    data-option-key="<%= option.key %>"
                                    onclick="vote('<%= question.key %>', '<%= option.key %>')">
                                <span class="option-text"><%= option.text %></span>
                                <div class="percent-display">
                                    <div class="percent-bar">
                                        <div class="percent-bar-fill" style="width: <%= percentages[question.key] ? percentages[question.key][optIndex] : 0 %>%"></div>
                                    </div>
                                    <span class="percent-value"><%= percentages[question.key] ? percentages[question.key][optIndex] : 0 %>%</span>
                                </div>
                            </button>
                        <% }); %>
                    </div>
                </div>
            <% }); %>
        </div>
        <div class="navigation">
            <button class="continue-btn" onclick="checkEmployeeStatus()" disabled>Continue</button>
        </div>
    </div>

    <!-- Employee Check Modal -->
    <div id="employeeModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>One Last Question!</h2>
                <div class="modal-icon">ðŸ‘‹</div>
            </div>
            <p>Are you an employee or work in an events/marketing team?</p>
            <div class="modal-buttons">
                <button onclick="handleEmployeeResponse(true)" class="modal-btn yes-btn">
                    <span class="btn-icon">âœ“</span>
                    Yes, I am an employee
                </button>
                <button onclick="handleEmployeeResponse(false)" class="modal-btn no-btn">
                    <span class="btn-icon">â†’</span>
                    No, I am not an employee
                </button>
            </div>
            <div class="modal-footer">
                <p class="modal-note">Your response helps us provide more relevant questions</p>
            </div>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        // State management
        const state = {
            answeredQuestions: new Set(),
            totalQuestions: <%= questions.length %>,
            isSubmitting: false
        };

        // Vote handling
        function vote(questionKey, optionKey) {
            if (state.isSubmitting) return;
            try {
                state.isSubmitting = true;
                const questionCard = document.getElementById(`question-${questionKey}`);
                if (!questionCard) throw new Error(`Question card ${questionKey} not found`);
                const buttons = questionCard.querySelectorAll('.option-btn');
                if (!buttons.length) throw new Error(`No buttons found for question ${questionKey}`);
                buttons.forEach(btn => btn.classList.remove('answered'));
                const selectedBtn = Array.from(buttons).find(btn => btn.getAttribute('data-option-key') === optionKey);
                if (selectedBtn) selectedBtn.classList.add('answered');
                if (questionCard) {
                    questionCard.classList.add('show-percent');
                    buttons.forEach(btn => { btn.disabled = true; });
                    questionCard.classList.add('locked');
                }
                state.answeredQuestions.add(questionKey);
                // Emit vote to server
                const socket = window.io();
                socket.emit('vote', { questionKey, optionKey, isEmployee: false });
                updateContinueButton();
            } catch (error) {
                alert('An error occurred while submitting your vote. Please try again.');
            } finally {
                state.isSubmitting = false;
            }
        }

        function updateContinueButton() {
            const continueBtn = document.querySelector('.continue-btn');
            if (continueBtn) {
                continueBtn.disabled = state.answeredQuestions.size !== state.totalQuestions;
            }
        }

        function checkEmployeeStatus() {
            if (state.answeredQuestions.size !== state.totalQuestions) return;
            document.getElementById('employeeModal').style.display = 'flex';
        }

        function handleEmployeeResponse(isEmployee) {
            if (isEmployee) {
                window.location.href = '/employee';
            } else {
                window.location.href = '/thankyou';
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            updateContinueButton();
        });
    </script>

    <style>
        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            justify-content: center;
            align-items: center;
            z-index: 1000;
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background: white;
            padding: 2.5rem;
            border-radius: 16px;
            max-width: 500px;
            width: 90%;
            text-align: center;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            animation: modalFadeIn 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .modal-header {
            margin-bottom: 1.5rem;
        }

        .modal-icon {
            font-size: 3rem;
            margin: 1rem 0;
            animation: wave 2s infinite;
        }

        .modal h2 {
            color: #4B108D;
            margin-bottom: 0.5rem;
            font-size: 1.8rem;
            font-weight: 700;
        }

        .modal p {
            margin-bottom: 2rem;
            color: #333;
            font-size: 1.1rem;
            line-height: 1.6;
        }

        .modal-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-bottom: 1.5rem;
        }

        .modal-btn {
            padding: 1rem 1.8rem;
            border: none;
            border-radius: 12px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            font-size: 1rem;
            min-width: 200px;
        }

        .btn-icon {
            font-size: 1.2rem;
        }

        .yes-btn {
            background: #4B108D;
            color: white;
            box-shadow: 0 4px 12px rgba(75, 16, 141, 0.2);
        }

        .no-btn {
            background: #f8f9fa;
            color: #4B108D;
            border: 2px solid #4B108D;
        }

        .modal-btn:hover {
            transform: translateY(-2px);
        }

        .yes-btn:hover {
            background: #3a0d6b;
            box-shadow: 0 6px 16px rgba(75, 16, 141, 0.3);
        }

        .no-btn:hover {
            background: #f0f0f0;
            border-color: #3a0d6b;
            color: #3a0d6b;
        }

        .modal-footer {
            margin-top: 1rem;
        }

        .modal-note {
            font-size: 0.9rem;
            color: #666;
            margin: 0;
        }

        @keyframes modalFadeIn {
            from {
                opacity: 0;
                transform: translateY(-30px) scale(0.95);
            }
            to {
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }

        @keyframes wave {
            0% { transform: rotate(0deg); }
            10% { transform: rotate(14deg); }
            20% { transform: rotate(-8deg); }
            30% { transform: rotate(14deg); }
            40% { transform: rotate(-4deg); }
            50% { transform: rotate(10deg); }
            60% { transform: rotate(0deg); }
            100% { transform: rotate(0deg); }
        }

        @media (max-width: 480px) {
            .modal-buttons {
                flex-direction: column;
            }
            
            .modal-content {
                padding: 1.5rem;
            }

            .modal-btn {
                width: 100%;
                min-width: unset;
            }

            .modal h2 {
                font-size: 1.5rem;
            }

            .modal p {
                font-size: 1rem;
            }
        }
    </style>
</body>
</html> 